openapi: 3.0.1
info:
  title: MovieService
  version: v1
servers:
- url: http://localhost:9012
  description: Movie Service is a service that takes cares of maintaining movies data
paths:
  /movies/{movieId}:
    get:
      tags:
      - movies-controller
      operationId: getMovie
      parameters:
      - name: movieId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MovieResponseDTO'
    put:
      tags:
      - movies-controller
      operationId: createOrUpdateMovie
      parameters:
      - name: movieId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieRequestDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MovieResponseDTO'
      security:
      - bearer-key: []
    delete:
      tags:
      - movies-controller
      operationId: deleteMovie
      parameters:
      - name: movieId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
      security:
      - bearer-key: []
    patch:
      tags:
      - movies-controller
      operationId: updateMovie
      parameters:
      - name: movieId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieRequestDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MovieResponseDTO'
      security:
      - bearer-key: []
  /movies:
    get:
      tags:
      - movies-controller
      operationId: getAllMovies
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovieResponseDTO'
    post:
      tags:
      - movies-controller
      operationId: createMovie
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovieRequestDTO'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "500":
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "403":
          description: Forbidden
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponseDTO'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MovieResponseDTO'
      security:
      - bearer-key: []
components:
  schemas:
    ErrorResponseDTO:
      type: object
      properties:
        errorMessage:
          type: string
        timestamp:
          type: integer
          format: int64
    MovieRequestDTO:
      type: object
      properties:
        title:
          type: string
        releaseDate:
          type: string
        genre:
          type: string
        movieDurationInMinutes:
          type: string
        director:
          type: string
        description:
          type: string
        cast:
          type: array
          items:
            type: string
    MovieResponseDTO:
      type: object
      properties:
        movieId:
          type: integer
          format: int32
        title:
          type: string
        releaseDate:
          type: string
        genre:
          type: string
        movieDurationInMinutes:
          type: integer
          format: int32
        director:
          type: string
        description:
          type: string
        cast:
          type: array
          items:
            type: string
  securitySchemes:
    bearer-key:
      type: http
      scheme: bearer
      bearerFormat: JWT
